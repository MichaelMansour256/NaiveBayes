y_pred <- predict(model, newdata = testdata)
conf <- table(actual=testdata$gender,predicted=y_pred)
acc2<-sum(diag(conf))/sum(conf)
library(e1071)
library(caTools)
library(caret)
sample_data <- read.table('nbtrain.csv',header = TRUE,sep = ',')
#print(sample)
#split <- sample.split(sample_data, SplitRatio = 0.9)
traindata <- sample_data[1:9000,1:4]
testdata <- sample_data[9001:10010,1:4]
trainmale=traindata[traindata$gender == 'M',]
trainfemale=traindata[traindata$gender == 'F',]
a <- trainmale[sample(nrow(trainmale), 3500 ), ]
b <- trainfemale[sample(nrow(trainfemale), 3500 ), ]
new_traindata<-rbind(a,b)
model <- naiveBayes(gender ~.,new_traindata)
model
y_pred <- predict(model, newdata = testdata)
conf <- table(actual=testdata$gender,predicted=y_pred)
acc<-sum(diag(conf))/sum(conf)
library(e1071)
library(caTools)
library(caret)
sample_data <- read.table('nbtrain.csv',header = TRUE,sep = ',')
#print(sample)
#split <- sample.split(sample_data, SplitRatio = 0.9)
traindata <- sample_data[1:9000,1:4]
testdata <- sample_data[9001:10010,1:4]
trainmale=traindata[traindata$gender == 'M',]
trainfemale=traindata[traindata$gender == 'F',]
a <- trainmale[sample(nrow(trainmale), 3500 ), ]
b <- trainfemale[sample(nrow(trainfemale), 3500 ), ]
new_traindata<-rbind(a,b)
model <- naiveBayes(gender ~.,new_traindata)
model
y_pred <- predict(model, newdata = testdata)
conf <- table(actual=testdata$gender,predicted=y_pred)
acc1<-sum(diag(conf))/sum(conf)
library(e1071)
library(caTools)
library(caret)
sample_data <- read.table('nbtrain.csv',header = TRUE,sep = ',')
#print(sample)
#split <- sample.split(sample_data, SplitRatio = 0.9)
traindata <- sample_data[1:9000,1:4]
testdata <- sample_data[9001:10010,1:4]
trainmale=traindata[traindata$gender == 'M',]
trainfemale=traindata[traindata$gender == 'F',]
a <- trainmale[sample(nrow(trainmale), 3500 ), ]
b <- trainfemale[sample(nrow(trainfemale), 3500 ), ]
new_traindata<-rbind(a,b)
model <- naiveBayes(gender ~.,new_traindata)
model
y_pred <- predict(model, newdata = testdata)
conf <- table(actual=testdata$gender,predicted=y_pred)
acc2<-sum(diag(conf))/sum(conf)
setwd('H:\\4.2\\4.2\\Data Sceince\\Data Science Practical Task-20210526\\Dataset for practical task')
#install.packages("e1071")
#install.packages("caTools")
#install.packages("caret")
# Loading package
library(e1071)
library(caTools)
library(caret)
sample <- read.table('nbtrain.csv',header = TRUE,sep = ',')
#print(sample)
#split <- sample.split(sample, SplitRatio = 0.8)
#traindata <- subset(sample, split == "TRUE")
#testdata <- subset(sample, split == "FALSE")
traindata <- sample[1:9000,1:4]
testdata <- sample[9001:10010,1:4]
#traindata
#testdata
model <- naiveBayes(income ~.,traindata)
#model
y_pred <- predict(model, newdata = testdata)
conf <- table(actual=testdata$income,predicted=y_pred)
acc<-sum(diag(conf))/sum(conf)
acc
#cm <- table(testdata$income, y_pred)
#cm
#confusionMatrix(cm)
setwd('H:\\4.2\\4.2\\Data Sceince\\Data Science Practical Task-20210526\\Dataset for practical task')
#install.packages("e1071")
#install.packages("caTools")
#install.packages("caret")
# Loading package
library(e1071)
library(caTools)
library(caret)
sample <- read.table('nbtrain.csv',header = TRUE,sep = ',')
print(sample)
#split <- sample.split(sample, SplitRatio = 0.8)
#traindata <- subset(sample, split == "TRUE")
#testdata <- subset(sample, split == "FALSE")
traindata <- sample[1:9000,1:4]
testdata <- sample[9001:10010,1:4]
#traindata
#testdata
model <- naiveBayes(gender ~.,traindata)
#model
y_pred <- predict(model, newdata = testdata)
conf <- table(actual=testdata$gender,predicted=y_pred)
acc<-sum(diag(conf))/sum(conf)
#acc
#cm <- table(testdata$gender, y_pred)
#cm
#confusionMatrix(cm)
setwd('H:\\4.2\\4.2\\Data Sceince\\Data Science Practical Task-20210526\\Dataset for practical task')
#install.packages("e1071")
#install.packages("caTools")
#install.packages("caret")
# Loading package
library(e1071)
library(caTools)
library(caret)
sample <- read.table('nbtrain.csv',header = TRUE,sep = ',')
print(sample)
#split <- sample.split(sample, SplitRatio = 0.8)
#traindata <- subset(sample, split == "TRUE")
#testdata <- subset(sample, split == "FALSE")
traindata <- sample[1:9000,1:4]
testdata <- sample[9001:10020,1:4]
#traindata
#testdata
model <- naiveBayes(gender ~.,traindata)
#model
y_pred <- predict(model, newdata = testdata)
conf <- table(actual=testdata$gender,predicted=y_pred)
acc<-sum(diag(conf))/sum(conf)
#acc
#cm <- table(testdata$gender, y_pred)
#cm
#confusionMatrix(cm)
View(testdata)
#set the working directory
setwd('H:\\4.2\\4.2\\Data Sceince\\Data Science Practical Task-20210526\\Dataset for practical task')
# install the package
install.packages("e1071")
# Loading package
library(e1071)
# read the csv file into table
sample <- read.table('nbtrain.csv',header = TRUE,sep = ',')
# split the data into train and test
traindata <- sample[1:9000,1:4]
testdata <- sample[9001:10010,1:4]
# call the naive bayes by gender
model <- naiveBayes(gender ~.,traindata)
# get the prediction for test data
y_pred <- predict(model, newdata = testdata)
# create confusion matrix for the result
conf <- table(actual=testdata$gender,predicted=y_pred)
# calculate the accurcy
acc<-sum(diag(conf))/sum(conf)
#set the working directory
setwd('H:\\4.2\\4.2\\Data Sceince\\Data Science Practical Task-20210526\\Dataset for practical task')
# install the package
install.packages("e1071")
# Loading package
library(e1071)
# read the csv file into table
sample <- read.table('nbtrain.csv',header = TRUE,sep = ',')
# split the data into train and test
traindata <- sample[1:9000,1:4]
testdata <- sample[9001:10010,1:4]
# call the naive bayes by income
model <- naiveBayes(income ~.,traindata)
# get the prediction for test data
y_pred <- predict(model, newdata = testdata)
# create confusion matrix for the result
conf <- table(actual=testdata$income,predicted=y_pred)
# calculate the accuracy
acc<-sum(diag(conf))/sum(conf)
install.packages("e1071")
#set the working directory
setwd('H:\\4.2\\4.2\\Data Sceince\\Data Science Practical Task-20210526\\Dataset for practical task')
# install the package
install.packages("e1071")
# Loading package
library(e1071)
# read the csv file into table
sample <- read.table('nbtrain.csv',header = TRUE,sep = ',')
# split the data into train and test
traindata <- sample[1:9000,1:4]
testdata <- sample[9001:10010,1:4]
# filter the training data with gender (male , female)
trainmale=traindata[traindata$gender == 'M',]
trainfemale=traindata[traindata$gender == 'F',]
for (i in 1:3){
# get 3500 record randomly from each gender
a <- trainmale[sample(nrow(trainmale), 3500 ), ]
b <- trainfemale[sample(nrow(trainfemale), 3500 ), ]
# combine each 3500 record in one data frame
new_traindata<-rbind(a,b)
# call naive bayes model on gender col
model <- naiveBayes(gender ~.,new_traindata)
# get the predictions
y_pred <- predict(model, newdata = testdata)
# create the confusion metrics
conf <- table(actual=testdata$gender,predicted=y_pred)
# calculate the accuracy
acc <-sum(diag(conf))/sum(conf)
}
install.packages("e1071")
#set the working directory
setwd('H:\\4.2\\4.2\\Data Sceince\\Data Science Practical Task-20210526\\Dataset for practical task')
# install the package
install.packages("e1071")
# Loading package
library(e1071)
# read the csv file into table
sample <- read.table('nbtrain.csv',header = TRUE,sep = ',')
# split the data into train and test
traindata <- sample[1:9000,1:4]
testdata <- sample[9001:10010,1:4]
# filter the training data with gender (male , female)
trainmale=traindata[traindata$gender == 'M',]
trainfemale=traindata[traindata$gender == 'F',]
for (i in 1:3){
# get 3500 record randomly from each gender
a <- trainmale[sample(nrow(trainmale), 3500 ), ]
b <- trainfemale[sample(nrow(trainfemale), 3500 ), ]
# combine each 3500 record in one data frame
new_traindata<-rbind(a,b)
# call naive bayes model on gender col
model <- naiveBayes(gender ~.,new_traindata)
# get the predictions
y_pred <- predict(model, newdata = testdata)
# create the confusion metrics
conf <- table(actual=testdata$gender,predicted=y_pred)
# calculate the accuracy
acc <-sum(diag(conf))/sum(conf)
acc
}
install.packages("e1071")
#set the working directory
setwd('H:\\4.2\\4.2\\Data Sceince\\Data Science Practical Task-20210526\\Dataset for practical task')
# install the package
install.packages("e1071")
# Loading package
library(e1071)
# read the csv file into table
sample <- read.table('nbtrain.csv',header = TRUE,sep = ',')
# split the data into train and test
traindata <- sample[1:9000,1:4]
testdata <- sample[9001:10010,1:4]
# filter the training data with gender (male , female)
trainmale=traindata[traindata$gender == 'M',]
trainfemale=traindata[traindata$gender == 'F',]
for (i in 1:3){
# get 3500 record randomly from each gender
a <- trainmale[sample(nrow(trainmale), 3500 ), ]
b <- trainfemale[sample(nrow(trainfemale), 3500 ), ]
# combine each 3500 record in one data frame
new_traindata<-rbind(a,b)
# call naive bayes model on gender col
model <- naiveBayes(gender ~.,new_traindata)
# get the predictions
y_pred <- predict(model, newdata = testdata)
# create the confusion metrics
conf <- table(actual=testdata$gender,predicted=y_pred)
# calculate the accuracy
acc <-sum(diag(conf))/sum(conf)
print(acc)
}
install.packages("e1071")
#set the working directory
setwd('H:\\4.2\\4.2\\Data Sceince\\Data Science Practical Task-20210526\\Dataset for practical task')
# install the package
install.packages("e1071")
# Loading package
library(e1071)
# read the csv file into table
sample <- read.table('nbtrain.csv',header = TRUE,sep = ',')
# split the data into train and test
traindata <- sample[1:9000,1:4]
testdata <- sample[9001:10010,1:4]
# filter the training data with gender (male , female)
trainmale=traindata[traindata$gender == 'M',]
trainfemale=traindata[traindata$gender == 'F',]
# try 3 times to get random records
for (i in 1:3){
# get 3500 record randomly from each gender
a <- trainmale[sample(nrow(trainmale), 3500 ), ]
b <- trainfemale[sample(nrow(trainfemale), 3500 ), ]
# combine each 3500 record in one data frame
new_traindata<-rbind(a,b)
# call naive bayes model on gender col
model <- naiveBayes(gender ~.,new_traindata)
# get the predictions
y_pred <- predict(model, newdata = testdata)
# create the confusion metrics
conf <- table(actual=testdata$gender,predicted=y_pred)
acc<-0
# calculate the accuracy
acc <-sum(diag(conf))/sum(conf)
print(acc)
}
install.packages("e1071")
#set the working directory
setwd('H:\\4.2\\4.2\\Data Sceince\\Data Science Practical Task-20210526\\Dataset for practical task')
# install the package
install.packages("e1071")
# Loading package
library(e1071)
# read the csv file into table
sample <- read.table('nbtrain.csv',header = TRUE,sep = ',')
# split the data into train and test
traindata <- sample[1:9000,1:4]
testdata <- sample[9001:10010,1:4]
# call the naive bayes by gender
model <- naiveBayes(gender ~.,traindata)
model
# get the prediction for test data
y_pred <- predict(model, newdata = testdata)
# create confusion matrix for the result
conf <- table(actual=testdata$gender,predicted=y_pred)
conf
# calculate the accuracy
acc<-sum(diag(conf))/sum(conf)
acc
install.packages("e1071")
#set the working directory
setwd('H:\\4.2\\4.2\\Data Sceince\\Data Science Practical Task-20210526\\Dataset for practical task')
# install the package
install.packages("e1071")
# Loading package
library(e1071)
# read the csv file into table
sample <- read.table('nbtrain.csv',header = TRUE,sep = ',')
# split the data into train and test
traindata <- sample[1:9000,1:4]
testdata <- sample[9001:10010,1:4]
# call the naive bayes by income
model <- naiveBayes(income ~.,traindata)
model
# get the prediction for test data
y_pred <- predict(model, newdata = testdata)
# create confusion matrix for the result
conf <- table(actual=testdata$income,predicted=y_pred)
conf
# calculate the accuracy
acc<-sum(diag(conf))/sum(conf)
install.packages("e1071")
#set the working directory
setwd('H:\\4.2\\4.2\\Data Sceince\\Data Science Practical Task-20210526\\Dataset for practical task')
# install the package
install.packages("e1071")
# Loading package
library(e1071)
# read the csv file into table
sample <- read.table('nbtrain.csv',header = TRUE,sep = ',')
# split the data into train and test
traindata <- sample[1:9010,1:4]
testdata <- sample[9011:10010,1:4]
# call the naive bayes by income
model <- naiveBayes(income ~.,traindata)
model
# get the prediction for test data
y_pred <- predict(model, newdata = testdata)
# create confusion matrix for the result
conf <- table(actual=testdata$income,predicted=y_pred)
conf
# calculate the accuracy
acc<-sum(diag(conf))/sum(conf)
install.packages("e1071")
#set the working directory
setwd('H:\\4.2\\4.2\\Data Sceince\\Data Science Practical Task-20210526\\Dataset for practical task')
# install the package
install.packages("e1071")
# Loading package
library(e1071)
# read the csv file into table
sample <- read.table('nbtrain.csv',header = TRUE,sep = ',')
# split the data into train and test
traindata <- sample[1:9010,1:4]
testdata <- sample[9011:10010,1:4]
# call the naive bayes by income
model <- naiveBayes(income ~.,traindata)
model
# get the prediction for test data
y_pred <- predict(model, newdata = testdata)
# create confusion matrix for the result
conf <- table(actual=testdata$income,predicted=y_pred)
conf
# calculate the accuracy
acc<-sum(diag(conf))/sum(conf)
acc
install.packages("e1071")
View(trainfemale)
#set the working directory
setwd('H:\\4.2\\4.2\\Data Sceince\\Data Science Practical Task-20210526\\Dataset for practical task')
# install the package
install.packages("e1071")
# Loading package
library(e1071)
# read the csv file into table
sample <- read.table('nbtrain.csv',header = TRUE,sep = ',')
# split the data into train and test
traindata <- sample[1:9010,1:4]
testdata <- sample[9011:10010,1:4]
# call the naive bayes by gender
model <- naiveBayes(gender ~.,traindata)
model
# get the prediction for test data
y_pred <- predict(model, newdata = testdata)
# create confusion matrix for the result
conf <- table(actual=testdata$gender,predicted=y_pred)
conf
# calculate the accuracy
acc<-sum(diag(conf))/sum(conf)
acc
install.packages("e1071")
#set the working directory
setwd('H:\\4.2\\4.2\\Data Sceince\\Data Science Practical Task-20210526\\Dataset for practical task')
# install the package
install.packages("e1071")
# Loading package
library(e1071)
# read the csv file into table
sample <- read.table('nbtrain.csv',header = TRUE,sep = ',')
# split the data into train and test
traindata <- sample[1:9010,1:4]
testdata <- sample[9011:10010,1:4]
# filter the training data with gender (male , female)
trainmale=traindata[traindata$gender == 'M',]
trainfemale=traindata[traindata$gender == 'F',]
# try 3 times to get random records
for (i in 1:4){
# get 3500 record randomly from each gender
a <- trainmale[sample(nrow(trainmale), 3500 ), ]
b <- trainfemale[sample(nrow(trainfemale), 3500 ), ]
# combine each 3500 record in one data frame
new_traindata<-rbind(a,b)
# call naive bayes model on gender col
model <- naiveBayes(gender ~.,new_traindata)
# get the predictions
y_pred <- predict(model, newdata = testdata)
# create the confusion metrics
conf <- table(actual=testdata$gender,predicted=y_pred)
# calculate the accuracy
acc <-sum(diag(conf))/sum(conf)
print(acc)
}
install.packages("e1071")
#set the working directory
setwd('H:\\4.2\\4.2\\Data Sceince\\Data Science Practical Task-20210526\\Dataset for practical task')
# install the package
install.packages("e1071")
# Loading package
library(e1071)
# read the csv file into table
sample <- read.table('nbtrain.csv',header = TRUE,sep = ',')
# split the data into train and test
traindata <- sample[1:9010,1:4]
testdata <- sample[9011:10010,1:4]
# filter the training data with gender (male , female)
trainmale=traindata[traindata$gender == 'M',]
trainfemale=traindata[traindata$gender == 'F',]
# try 3 times to get random records
for (i in 1:4){
# get 3500 record randomly from each gender
a <- trainmale[sample(nrow(trainmale), 3500 ), ]
b <- trainfemale[sample(nrow(trainfemale), 3500 ), ]
# combine each 3500 record in one data frame
new_traindata<-rbind(a,b)
# call naive bayes model on gender col
model <- naiveBayes(gender ~.,new_traindata)
model
# get the predictions
y_pred <- predict(model, newdata = testdata)
# create the confusion metrics
conf <- table(actual=testdata$gender,predicted=y_pred)
# calculate the accuracy
acc <-sum(diag(conf))/sum(conf)
print(acc)
}
install.packages("e1071")
#set the working directory
setwd('H:\\4.2\\4.2\\Data Sceince\\Data Science Practical Task-20210526\\Dataset for practical task')
# install the package
install.packages("e1071")
# Loading package
library(e1071)
# read the csv file into table
sample <- read.table('nbtrain.csv',header = TRUE,sep = ',')
# split the data into train and test
traindata <- sample[1:9010,1:4]
testdata <- sample[9011:10010,1:4]
# filter the training data with gender (male , female)
trainmale=traindata[traindata$gender == 'M',]
trainfemale=traindata[traindata$gender == 'F',]
# try 3 times to get random records
for (i in 1:4){
# get 3500 record randomly from each gender
a <- trainmale[sample(nrow(trainmale), 3500 ), ]
b <- trainfemale[sample(nrow(trainfemale), 3500 ), ]
# combine each 3500 record in one data frame
new_traindata<-rbind(a,b)
# call naive bayes model on gender col
model <- naiveBayes(gender ~.,new_traindata)
print(model)
# get the predictions
y_pred <- predict(model, newdata = testdata)
# create the confusion metrics
conf <- table(actual=testdata$gender,predicted=y_pred)
# calculate the accuracy
acc <-sum(diag(conf))/sum(conf)
print(acc)
}
install.packages("e1071")
